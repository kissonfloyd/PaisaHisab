name: Build Android APK/AAB

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (apk or aab)'
        required: true
        default: 'both'
        type: choice
        options:
        - apk
        - aab  
        - both

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Check project structure
      run: |
        echo "Project structure:"
        ls -la
        echo "Looking for Android folder:"
        ls -la android/ || echo "Android folder not found in root"
        echo "Checking for package.json:"
        ls -la package.json || echo "package.json not found"

    - name: Install React Native CLI
      run: npm install -g @react-native-community/cli

    - name: Install dependencies
      run: |
        npm cache clean --force
        npm install

    - name: Reorganize files into React Native structure
      run: |
        echo "Reorganizing files into proper React Native project structure..."
        
        # Create Android project structure
        mkdir -p android/app/src/main/java/com/smartbudgettracker
        mkdir -p android/gradle/wrapper
        
        # Move Android build files to correct locations
        if [ -f "build.gradle" ]; then
          mv build.gradle android/app/build.gradle
        fi
        if [ -f "gradle.properties" ]; then
          mv gradle.properties android/gradle.properties
        fi
        if [ -f "settings.gradle" ]; then
          mv settings.gradle android/settings.gradle
        fi
        if [ -f "AndroidManifest.xml" ]; then
          mv AndroidManifest.xml android/app/src/main/AndroidManifest.xml
        fi
        
        # Create basic Android project files if missing
        if [ ! -f "android/build.gradle" ]; then
          cat > android/build.gradle << 'EOF'
buildscript {
    ext {
        buildToolsVersion = "34.0.0"
        minSdkVersion = 21
        compileSdkVersion = 34
        targetSdkVersion = 34
        ndkVersion = "25.1.8937393"
    }
    dependencies {
        classpath("com.android.tools.build:gradle:8.1.1")
    }
}

apply plugin: "com.android.application"
apply plugin: "com.facebook.react"

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion
    
    defaultConfig {
        applicationId "com.smartbudgettracker"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation "com.facebook.react:react-native:+"
}
EOF
        fi
        
        echo "Project structure reorganized successfully"

    - name: Create gradle wrapper if missing
      run: |
        if [ ! -d "android" ]; then
          echo "Android directory still missing, cannot proceed"
          exit 1
        fi
        cd android
        if [ ! -f gradle/wrapper/gradle-wrapper.properties ]; then
          echo "Creating gradle wrapper..."
          gradle wrapper --gradle-version=8.0.1 || echo "Gradle wrapper creation failed"
        fi

    - name: Make gradlew executable
      run: |
        if [ -f "android/gradlew" ]; then
          chmod +x android/gradlew
        else
          echo "gradlew not found, skipping"
        fi

    - name: Generate Upload Keystore
      run: |
        if [ -d "android/app" ]; then
          cd android/app
          keytool -genkey -v -keystore smartbudget-upload-key.keystore -alias smartbudget-upload -keyalg RSA -keysize 2048 -validity 10000 -storepass smartbudget123 -keypass smartbudget123 -dname "CN=Smart Budget Tracker, OU=KissonFloyd, O=Smart Budget, L=Kathmandu, ST=Bagmati, C=NP"
        else
          echo "Android app directory not found, skipping keystore generation"
        fi

    - name: Build Release APK
      if: ${{ github.event.inputs.build_type == 'apk' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '' }}
      run: |
        if [ -f "android/gradlew" ]; then
          cd android && ./gradlew assembleRelease
        else
          echo "Cannot build APK - gradlew not found"
          exit 1
        fi

    - name: Build Release AAB
      if: ${{ github.event.inputs.build_type == 'aab' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '' }}
      run: |
        if [ -f "android/gradlew" ]; then
          cd android && ./gradlew bundleRelease
        else
          echo "Cannot build AAB - gradlew not found"
          exit 1
        fi

    - name: Upload APK Artifact
      if: ${{ github.event.inputs.build_type == 'apk' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '' }}
      uses: actions/upload-artifact@v4
      with:
        name: smart-budget-tracker-apk
        path: android/app/build/outputs/apk/release/app-release.apk
        retention-days: 30

    - name: Upload AAB Artifact
      if: ${{ github.event.inputs.build_type == 'aab' || github.event.inputs.build_type == 'both' || github.event.inputs.build_type == '' }}
      uses: actions/upload-artifact@v4
      with:
        name: smart-budget-tracker-aab
        path: android/app/build/outputs/bundle/release/app-release.aab
        retention-days: 30

    - name: Upload Build Metadata
      uses: actions/upload-artifact@v4
      with:
        name: build-metadata
        path: |
          android/app/build/outputs/apk/release/output-metadata.json
          android/app/build/outputs/bundle/release/output-metadata.json
        retention-days: 30

    - name: Generate Build Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "| File Type | Status | Size | Location |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|------|----------|" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "android/app/build/outputs/apk/release/app-release.apk" ]; then
          APK_SIZE=$(du -h android/app/build/outputs/apk/release/app-release.apk | cut -f1)
          echo "| APK | ✅ Built | $APK_SIZE | Download from Artifacts |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "android/app/build/outputs/bundle/release/app-release.aab" ]; then
          AAB_SIZE=$(du -h android/app/build/outputs/bundle/release/app-release.aab | cut -f1)
          echo "| AAB | ✅ Built | $AAB_SIZE | Download from Artifacts |" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the AAB file from the Artifacts section above" >> $GITHUB_STEP_SUMMARY
        echo "2. Upload the AAB to Google Play Console" >> $GITHUB_STEP_SUMMARY
        echo "3. Use the APK for testing on devices" >> $GITHUB_STEP_SUMMARY
